syntax = "proto3";

package PGo;

import public "enums.proto";

message MapObjectsRequest {
  Cell cell_request = 1;
  bytes unknown2 = 2;
  double lat = 3;
  double long = 4;
}

message Cell {
  repeated uint64 typea = 402653184;
  repeated uint64 typeb = 134217728;
}

// The response sent in response to the map object request
message MapObjectsResponse {
  repeated Tile tiles = 1;
}

// A tile is a geographical "zone" containing objects like pokemon, gyms, and pokestops
message Tile {
  
  // S2 geographic area that the tile covers (http://s2map.com/) (https://code.google.com/archive/p/s2-geometry-library/)
  uint64 s2cell_token = 1;

  uint64 current_timestamp = 2;
  repeated Fort forts = 3;

  // Pokemon within 2 "steps" or closer will have a PokemonSpawnA and PokemonSpawnB
  repeated PokemonSpawnA close_pokemon_a = 5;
  repeated PokemonSpawnB close_pokemon_b = 10;

  // Pokemon farther away than 2 "steps", but still in the area (3 "steps" away)
  repeated PokemonInArea pokemon_in_area = 11;

  repeated Location location9 = 9; // TODO: not sure what this represents
  repeated Location location4 = 4; // TODO: not sure what this represents
}

// A "fort" is the internal name for a gym or pokestop point of interest
message Fort {
  string id = 1;
  uint64 timestamp = 2;
  double latitude = 3;
  double longitude = 4;

  bool not_sure8 = 8;

  // applies only to a gym fort
  TeamColor team = 5; // color of the team that owns the gym currently
  uint64 guard_pokemon_id = 6; // the pokedex number of the highest cp pokemon in the gym
  uint64 prestige = 10; // gym's experience / prestige
  bool is_in_battle = 11; // whether the gym is currently being battled

  // applies only to a pokestop fort
  bool is_pokestop = 9;
  uint64 reset_ts = 14; // the time at which the pokestop can be activated again

  // applies only to a pokestop fort with a lure attached
  bytes active_lure_id = 12; // TODO: needs validation
  FortLureInfo fort_lure_info = 13;
}

message FortLureInfo {
  string fort_id = 1;
  double not_sure2 = 2; // TODO: not sure what this is
  PokemonName pokemon = 3; // TODO: needs validation, seems to be the pokemon at the lure
  uint64 expiry_ts = 4; // when the lure will end
}

message PokemonSpawnA {
  double uid = 1;
  uint64 appeared_ts = 2; // TODO: needs validation, seems to be when the pokemon first appeared
  double latitude = 3;
  double longitude = 4;
  
  // S2 geographic area that this pokemon is in (http://s2map.com/) (https://code.google.com/archive/p/s2-geometry-library/)
  string s2cell_token = 5;

  message PokemonInfo {
    PokemonName pokemon = 2;
  }
  PokemonInfo pokemon_info = 7;

  int32 not_sure11 = 11; // TODO: not sure what this is
}

message PokemonSpawnB {
    
    // S2 geographic area that this pokemon is in (http://s2map.com/) (https://code.google.com/archive/p/s2-geometry-library/)
    string s2cell_token = 1;

    double uid = 2;
    PokemonName pokemon = 3;
    uint64 expiry_ts = 4; // when the pokemon will disappear
    double latitude = 5;
    double longitude = 6;
}

message PokemonInArea {
  PokemonName pokemon = 1;
  float distance = 2; // TODO: needs validation, seems to be distance in meters
  double uid = 3;
}

message Location {
  double latitude = 2;
  double longitude = 3;
}
